/*
n개의 음이 아닌 정수가 있습니다. 이 수를 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 [1, 1, 1, 1, 1]로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다.

-1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3
사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 target이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 return 하도록 solution 함수를 작성해주세요.

깊이 우선 탐색을 이용
    -> 스택/재귀를 이용하여 구현 할 수 있음
*/

#include <string>
#include <vector>
#include <iostream>

using namespace std;

void dfs(vector<int> numbers, int target, int depth, int sum, int& answer) {

    if (depth == numbers.size()) {
        if (target == sum) {
            answer++;
        }
        return;
    }

    dfs(numbers, target, depth + 1, sum + numbers[depth], answer);
    dfs(numbers, target, depth + 1, sum - numbers[depth], answer);
}

int solution(vector<int> numbers, int target) {
    int answer = 0;

    dfs(numbers, target, 0, 0, answer);

    return answer;
}