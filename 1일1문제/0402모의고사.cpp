/*
수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.

1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...
2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...
3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...

1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.
*/
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>

using namespace std;

vector<int> solution(vector<int> answers) {
    vector<int> answer;

    vector<int> stu1 = { 1,2,3,4,5 };
    vector<int> stu2 = { 2,1,2,3,2,4,2,5 };
    vector<int> stu3 = { 3,3,1,1,2,2,4,4,5,5 };

    vector<int> score = { 0,0,0 };

    int maxNumber = 0;

    for (int i = 0; i < 10000; i++) {
        if (stu1.size() == answers.size()) {
            break;
        }

        stu1.push_back(stu1[i]);
    }

    for (int i = 0; i < 10000; i++) {
        if (stu2.size() == answers.size()) {
            break;
        }

        stu2.push_back(stu2[i]);
    }

    for (int i = 0; i < 10000; i++) {
        if (stu3.size() == answers.size()) {
            break;
        }

        stu3.push_back(stu3[i]);
    }

    for (int i = 0; i < answers.size(); i++) {
        if (stu1[i] == answers[i]) score[0]++;
        if (stu2[i] == answers[i]) score[1]++;
        if (stu3[i] == answers[i]) score[2]++;
    }

    maxNumber = max({ score[0],score[1],score[2] });

    if (maxNumber == score[0]) {
        answer.push_back(1);
    }

    if (maxNumber == score[1]) {
        answer.push_back(2);
    }

    if (maxNumber == score[2]) {
        answer.push_back(3);
    }

    return answer;
}